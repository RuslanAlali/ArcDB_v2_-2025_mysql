#!/bin/bash
input_file="/mnt/ruslan/ArcDB_v2/mysql_db/resource/vcf_file20250612_chr22.csv"
#input_file="vcf.temp.csv"
if [ ! -f "$input_file" ]; then
    echo "Error: File $input_file not found"
    exit 1
fi
tail -n +2 "$input_file" | while IFS=, read -r orderid analysis runFolder snsv_vcf cnv_vcf sv_vcf bam; do
    # Remove any surrounding quotes from the orderid and paths
    orderid=$(echo "$orderid" | tr -d '"')
    snsv_vcf=$(echo "$snsv_vcf" | tr -d '"')
    
    # Define output filename
    output_vcf="/mnt/ruslan/ArcDB_v2/mysql_db/${orderid}_norm.vcf.gz"
    output_vcf2="/mnt/ruslan/ArcDB_v2/mysql_db/${orderid}_normx.vcf.gz"
    
    echo "Processing order ID: $orderid"
    echo "Input VCF: $snsv_vcf"
    echo "Output VCF: $output_vcf"
    echo "Output VCF: $output_vcf2"
    # Execute bcftools norm command
    bcftools norm "$snsv_vcf" -m- any --threads 10 -Oz -o "$output_vcf"

    if [ $? -eq 0 ]; then
        echo "Successfully normalized $orderid"
    else
        echo "Error processing $orderid"
    fi
    tabix "$output_vcf"
    bcftools view -r chr22 "$output_vcf" --threads 10 -Oz -o "$output_vcf2"


python add_vcf_2DB.py "$output_vcf2"

rm $output_vcf 
rm $output_vcf2 
rm "$output_vcf".tbi
    
done

echo "All samples processed"
